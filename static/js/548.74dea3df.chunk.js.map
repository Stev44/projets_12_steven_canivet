{"version":3,"file":"static/js/548.74dea3df.chunk.js","mappings":"uJAAO,MAAMA,EACTC,WAAAA,GAAkD,IAAtCC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,gBAC7BI,KAAKC,OAASN,EACdK,KAAKE,KAAOH,CAChB,ECJG,MCCMI,EAAQ,CACjBC,OAAQ,0BACRC,eAAe,EACfC,gBDJ4BC,MAC5B,GAA4B,qBAAjBC,aAEX,MAAO,CACHC,IAAMC,GAAQC,QAAQC,QAAQJ,aAAaK,QAAQH,IACnDI,IAAKA,CAACJ,EAAKK,IAAUJ,QAAQC,QAAQJ,aAAaQ,QAAQN,EAAKK,IAC/DE,OAASP,GAAQC,QAAQC,QAAQJ,aAAaU,WAAWR,IAC5D,ECHgBH,ICJRY,EAAgBC,GACpBA,EAGkB,kBAAZA,EACA,CACHC,UAAWD,GAIQ,oBAAvBA,EAAQE,WACDF,EAEJ,CAAC,EAXG,CAAC,ECAHG,EAAWC,eAAOC,EAAKC,GAAuB,IAAjBC,EAAO/B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAMgC,QAAiBC,MAAM1B,EAAMC,OAASqB,EAAK,CAC7CK,OAAQ,OACRH,UACAI,KAAML,IAEJM,QAAgBJ,EAAS1B,OACzB+B,EAAiB,IAAIxC,EAAsBmC,EAAS3B,OAAQ+B,GAClE,GAAIJ,EAASM,GACT,OAAOD,EAEX,MAAMA,CACV,ECdaE,EAAiBA,CAACd,EAAWe,EAAWC,KACjD,IAAKhB,GAAkC,kBAAdA,EACrB,KAAM,gFAEV,IAAKe,GAAkC,kBAAdA,EACrB,KAAM,wEAEV,IAAKC,GAAoC,kBAAfA,EACtB,KAAM,kFACV,ECTSC,EAAcC,GAChBA,EAAUC,YAAcD,EAAUE,WAA4C,IAA/BF,EAAUE,UAAU5C,OCAjE6C,EAAgBA,IAClB,IAAIjD,EAAsB,IAAK,oCCK7BkD,EAAyBA,CAACvB,EAASwB,KAC5C,GAPyBxB,KACjBA,EAAQyB,MAAMhD,SAAWuB,EAAQ0B,cAMrCC,CAAoB3B,GACpB,OAAO,ECTwB4B,EAACH,EAAMC,KAC1C,IAAKG,MAAMC,QAAQL,GACf,KAAM,wCAEV,GAA6B,kBAAlBC,EACP,KAAM,gDACV,EDIAE,CAAwB5B,EAAQyB,KAAMzB,EAAQ0B,eAC9C,MAAM/B,EAPOoC,EAACzB,EAAM0B,IACb1B,aAAgB2B,SAAW3B,EAAKjB,IAAI2C,GAAQ1B,EAAK0B,GAM1CD,CAASP,EAAQxB,EAAQ0B,eACvC,MAAqB,kBAAV/B,GAEJK,EAAQyB,KAAKS,SAASvC,EAAM,EEb1BwC,EAAoBA,IACtB,IAAI9D,EAAsB,IAAK,aCG7B+D,EAAiBhC,MAAOiC,EAAWrC,EAASsC,KACrD,IAAKtC,EAAQuC,WAAaD,EACtB,OAAO,ECPwBE,EAACD,EAAUE,KAC9C,GAAwB,kBAAbF,GAAyBA,EAAW,EAC3C,KAAM,qDAEV,GAAIE,GAAoB,kBAAPA,EACb,KAAM,+CACV,EDGAD,CAAwBxC,EAAQuC,SAAUvC,EAAQyC,IAClD,MAAMA,EAAKzC,EAAQyC,IAAMJ,EACnBK,OAVUtC,OAAOqC,EAAIF,EAAUD,KACrC,MAAMK,EAAWC,aAAcN,EAAQjD,IAAIoD,IAAQ,GACnD,OAAOF,EAAWM,KAAKC,MAAQH,CAAQ,EAQhBI,CAAYN,EAAIzC,EAAQuC,SAAUD,GACzD,OAAII,EAAW,UAGTJ,EAAQ5C,IAAI+C,EAAII,KAAKC,MAAM5C,aAC1B,EAAK,EEfH8C,EAAiBA,IACnB,IAAI3E,EAAsB,IAAK,qBCG1C,ECcoB+B,MAAOY,EAAWC,EAAYgC,EAAgBjD,KAC9D,MAAMkD,EAAOnD,EAAaC,GACpBC,EAAYiD,EAAKjD,WAAalB,EAAMkB,UACpChB,EAAgBiE,EAAKjE,eAAiBF,EAAME,cAC5CC,EAAkBgE,EAAKhE,iBAAmBH,EAAMG,gBAChDiE,EAAY,IAAKpE,EAAMoE,aAAcD,EAAKC,WAC1CC,EAAY,IAAKrE,EAAMqE,aAAcF,EAAKE,WAChD,GAAInE,GAAiBiC,EAAWC,WAC5B,OAAO5B,QAAQ8D,OAAO/B,KAI1B,GAFAP,EAAed,EAAWe,EAAWC,GC7BFgC,KAEnC,GAAIA,GAAgD,oBAA9BA,EAAe/C,WACjC,KAAM,yFACV,ED0BAoD,CAAuBL,GACnBA,GAAkB1B,EAAuB4B,EAAWF,GACpD,OAAO1D,QAAQ8D,OAAOlB,KAE1B,SAAUC,EAAemB,SAASC,SAAUJ,EAAWlE,GACnD,OAAOK,QAAQ8D,OAAOL,KAE1B,MAAMxB,EAAS,CACXiC,YAAa,QACbC,QAASzD,EACT0D,WAAY3C,EACZ4C,YAAa3C,EACb4C,gBAAiBZ,GAErB,OAAO9C,EAAS,uBAAwB2D,KAAKC,UAAUvC,GAAS,CAC5D,eAAgB,oBAClB,E,6BEvCN,MA+OA,EA/OgBwC,KACd,MAAMC,GAAOC,EAAAA,EAAAA,KAAaC,GAAUA,EAAMC,WAAWH,QAC9CI,EAAkBC,IAAuBC,EAAAA,EAAAA,UAAS,KAClDC,EAAiBC,IAAsBF,EAAAA,EAAAA,UAAS,IACjDG,EAAeC,EAAAA,EAAK,GAAGA,KACvBC,EAAWD,EAAAA,EAAK,GAAGA,KACnBE,EAAYF,EAAAA,EAAK,GAAGA,KACpBG,EAAiBH,EAAAA,EAAK,GAAGA,KAEzBI,EACG,iBADHA,EAEE,4BAIDC,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,CACzCW,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPzE,QAAS,MAGJ0E,EAASC,IAAchB,EAAAA,EAAAA,UAAS,KAChCiB,EAAgBC,IAAqBlB,EAAAA,EAAAA,WAAS,GAE/CmB,EAAgBC,IACpB,MAAM,KAAE3D,EAAI,MAAErC,GAAUgG,EAAEC,OAC1BX,EAAa,IACRD,EACH,CAAChD,GAAOrC,GACR,EAwCEkG,EAAkBzF,MAAOuF,EAAGG,KAChC,IACE,MAAMC,EAAWJ,EAAEK,cAAcC,cAAc,aAAaC,kBAEtD/E,UAAUgF,UAAUC,UAAUL,GAGvB,UAATD,EACFxB,EACGL,EAAiCoC,EAAAA,GAAYC,YAAtCD,EAAAA,GAAYE,aAEJ,UAATT,GACTrB,EACGR,EAAgCoC,EAAAA,GAAYG,WAArCH,EAAAA,GAAYI,YAKxBC,YAAW,KACTpC,EAAoB,GAAG,GACtB,KACHoC,YAAW,KACTjC,EAAmB,GAAG,GACrB,IACL,CAAE,MAAOkC,GACPC,QAAQC,IAAI,uBACd,GAMF,OACEC,EAAAA,EAAAA,KAAA,WAASC,UAAU,yBAAyBtE,GAAG,UAASuE,UACtDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACrB/C,EAA+BiD,EAAAA,GAAYC,UAApCD,EAAAA,GAAYE,aAEvBH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uBAAsBC,SAAA,EACnCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OACE,YAAW5C,GAAoBU,EAC/BgC,UAAU,8BACVM,QAAU1B,GAAME,EAAgBF,EAAG,SAASqB,SAAA,CAE3CnC,GACDiC,EAAAA,EAAAA,KAAA,MAAAE,SAAI,SACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAqBC,SAAC,uBAErCC,EAAAA,EAAAA,MAAA,OACE,YAAWzC,GAAmBO,EAC9BgC,UAAU,8BACVM,QAAU1B,GAAME,EAAgBF,EAAG,SAASqB,SAAA,CAE3CpC,GACDkC,EAAAA,EAAAA,KAAA,MAAAE,SAAI,WACJF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sBAAqBC,SAAC,iCAErCC,EAAAA,EAAAA,MAAA,OACE,YAAYhD,EAA+BoC,EAAAA,GAAYiB,UAApCjB,EAAAA,GAAYkB,UAC/BR,UAAU,8BACVM,QAjCcG,KACxBC,OAAOC,KAAK,4BAA6B,SAAS,EAgCbV,SAAA,CAE1BtC,GACDoC,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAGRC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAOY,SAxGThC,IACpBA,EAAEiC,iBAEFC,EAEI,oBACA,qBACA7C,EACA,qBAED8C,MAAMtH,IACLoG,QAAQC,IAAI,WAAYrG,EAAS3B,OAAQ2B,EAAS1B,MAClDmG,EAAa,CACXC,SAAU,GACVC,UAAW,GACXC,QAAS,GACTC,MAAO,GACPzE,QAAS,KAEX2E,EAAW,yCACXE,GAAkB,GAClBiB,YAAW,KACTjB,GAAkB,EAAM,GACvB,IAAM,IAEVsC,OAAOpB,IACNC,QAAQoB,MAAM,YAAarB,GAC3BpB,EACE,0EAEFE,GAAkB,GAClBiB,YAAW,KACTjB,GAAkB,EAAM,GACvB,IAAM,GACT,EAsEgDuB,SAAA,EAC5CC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAAUkB,QAAQ,WAAUjB,SAAC,cAG9CF,EAAAA,EAAAA,KAAA,SACEC,UAAU,QACVjB,KAAK,OACL9D,KAAK,WACLS,GAAG,WACHyF,YACGjE,EAAgCoC,EAAAA,GAAY8B,WAArC9B,EAAAA,GAAY+B,WAEtBzI,MAAOqF,EAAUE,SACjBmD,SAAU3C,EACV4C,UAAQ,QAGZrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAAUkB,QAAQ,YAAWjB,SAAC,eAG/CF,EAAAA,EAAAA,KAAA,SACEC,UAAU,QACVjB,KAAK,OACL9D,KAAK,YACLS,GAAG,YACHyF,YACGjE,EAAiCoC,EAAAA,GAAYkC,YAAtClC,EAAAA,GAAYmC,YAEtB7I,MAAOqF,EAAUG,UACjBkD,SAAU3C,EACV4C,UAAQ,QAGZrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAAUkB,QAAQ,UAASjB,SAAC,aAG7CF,EAAAA,EAAAA,KAAA,SACEC,UAAU,QACVjB,KAAK,OACL9D,KAAK,UACLS,GAAG,UACHyF,YACGjE,EAA+BoC,EAAAA,GAAYoC,UAApCpC,EAAAA,GAAYqC,UAEtB/I,MAAOqF,EAAUI,QACjBiD,SAAU3C,EACV4C,UAAQ,QAGZrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAAUkB,QAAQ,QAAOjB,SAAC,WAG3CF,EAAAA,EAAAA,KAAA,SACEC,UAAU,QACVjB,KAAK,QACL9D,KAAK,QACLS,GAAG,QACHyF,YAAY,QACZvI,MAAOqF,EAAUK,MACjBgD,SAAU3C,EACV4C,UAAQ,WAIdrB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kBAAiBC,SAAA,EAC9BF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,UAAUkB,QAAQ,UAASjB,SAAC,aAG7CF,EAAAA,EAAAA,KAAA,YACEC,UAAU,WACV/E,KAAK,UACLS,GAAG,UACHyF,YAAY,UACZvI,MAAOqF,EAAUpE,QACjByH,SAAU3C,EACV4C,UAAQ,WAIdrB,EAAAA,EAAAA,MAAA,UAAQF,UAAU,SAASjB,KAAK,SAAQkB,SAAA,EACtCF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAC,mBACzBlC,QAGJU,IACCsB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,UAASC,UACtBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,eAAcC,SAAE1B,aAK7B,C","sources":["../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/utils/createWebStorage/createWebStorage.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/buildOptions/buildOptions.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/utils/validateParams/validateParams.js","../node_modules/@emailjs/browser/es/utils/isHeadless/isHeadless.js","../node_modules/@emailjs/browser/es/errors/headlessError/headlessError.js","../node_modules/@emailjs/browser/es/utils/isBlockedValueInParams/isBlockedValueInParams.js","../node_modules/@emailjs/browser/es/utils/validateBlockListParams/validateBlockListParams.js","../node_modules/@emailjs/browser/es/errors/blockedEmailError/blockedEmailError.js","../node_modules/@emailjs/browser/es/utils/isLimitRateHit/isLimitRateHit.js","../node_modules/@emailjs/browser/es/utils/validateLimitRateParams/validateLimitRateParams.js","../node_modules/@emailjs/browser/es/errors/limitRateError/limitRateError.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/utils/validateTemplateParams/validateTemplateParams.js","containers/Contact/contact.jsx"],"sourcesContent":["export class EmailJSResponseStatus {\n    constructor(_status = 0, _text = 'Network Error') {\n        this.status = _status;\n        this.text = _text;\n    }\n}\n","export const createWebStorage = () => {\n    if (typeof localStorage === 'undefined')\n        return;\n    return {\n        get: (key) => Promise.resolve(localStorage.getItem(key)),\n        set: (key, value) => Promise.resolve(localStorage.setItem(key, value)),\n        remove: (key) => Promise.resolve(localStorage.removeItem(key)),\n    };\n};\n","import { createWebStorage } from '../utils/createWebStorage/createWebStorage';\nexport const store = {\n    origin: 'https://api.emailjs.com',\n    blockHeadless: false,\n    storageProvider: createWebStorage(),\n};\n","export const buildOptions = (options) => {\n    if (!options)\n        return {};\n    // support compatibility with SDK v3\n    if (typeof options === 'string') {\n        return {\n            publicKey: options,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (options.toString() === '[object Object]') {\n        return options;\n    }\n    return {};\n};\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = async (url, data, headers = {}) => {\n    const response = await fetch(store.origin + url, {\n        method: 'POST',\n        headers,\n        body: data,\n    });\n    const message = await response.text();\n    const responseStatus = new EmailJSResponseStatus(response.status, message);\n    if (response.ok) {\n        return responseStatus;\n    }\n    throw responseStatus;\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey || typeof publicKey !== 'string') {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID || typeof serviceID !== 'string') {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID || typeof templateID !== 'string') {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n};\n","export const isHeadless = (navigator) => {\n    return navigator.webdriver || !navigator.languages || navigator.languages.length === 0;\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const headlessError = () => {\n    return new EmailJSResponseStatus(451, 'Unavailable For Headless Browser');\n};\n","import { validateBlockListParams } from '../validateBlockListParams/validateBlockListParams';\nconst isBlockListDisabled = (options) => {\n    return !options.list?.length || !options.watchVariable;\n};\nconst getValue = (data, name) => {\n    return data instanceof FormData ? data.get(name) : data[name];\n};\nexport const isBlockedValueInParams = (options, params) => {\n    if (isBlockListDisabled(options))\n        return false;\n    validateBlockListParams(options.list, options.watchVariable);\n    const value = getValue(params, options.watchVariable);\n    if (typeof value !== 'string')\n        return false;\n    return options.list.includes(value);\n};\n","export const validateBlockListParams = (list, watchVariable) => {\n    if (!Array.isArray(list)) {\n        throw 'The BlockList list has to be an array';\n    }\n    if (typeof watchVariable !== 'string') {\n        throw 'The BlockList watchVariable has to be a string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const blockedEmailError = () => {\n    return new EmailJSResponseStatus(403, 'Forbidden');\n};\n","import { validateLimitRateParams } from '../validateLimitRateParams/validateLimitRateParams';\nconst getLeftTime = async (id, throttle, storage) => {\n    const lastTime = Number((await storage.get(id)) || 0);\n    return throttle - Date.now() + lastTime;\n};\nexport const isLimitRateHit = async (defaultID, options, storage) => {\n    if (!options.throttle || !storage) {\n        return false;\n    }\n    validateLimitRateParams(options.throttle, options.id);\n    const id = options.id || defaultID;\n    const leftTime = await getLeftTime(id, options.throttle, storage);\n    if (leftTime > 0) {\n        return true;\n    }\n    await storage.set(id, Date.now().toString());\n    return false;\n};\n","export const validateLimitRateParams = (throttle, id) => {\n    if (typeof throttle !== 'number' || throttle < 0) {\n        throw 'The LimitRate throttle has to be a positive number';\n    }\n    if (id && typeof id !== 'string') {\n        throw 'The LimitRate ID has to be a non-empty string';\n    }\n};\n","import { EmailJSResponseStatus } from '../../models/EmailJSResponseStatus';\nexport const limitRateError = () => {\n    return new EmailJSResponseStatus(429, 'Too Many Requests');\n};\n","import { EmailJSResponseStatus } from './models/EmailJSResponseStatus';\nimport { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm, EmailJSResponseStatus };\nexport default {\n    init,\n    send,\n    sendForm,\n    EmailJSResponseStatus,\n};\n","import { store } from '../../store/store';\nimport { sendPost } from '../../api/sendPost';\nimport { buildOptions } from '../../utils/buildOptions/buildOptions';\nimport { validateParams } from '../../utils/validateParams/validateParams';\nimport { validateTemplateParams } from '../../utils/validateTemplateParams/validateTemplateParams';\nimport { isHeadless } from '../../utils/isHeadless/isHeadless';\nimport { headlessError } from '../../errors/headlessError/headlessError';\nimport { isBlockedValueInParams } from '../../utils/isBlockedValueInParams/isBlockedValueInParams';\nimport { blockedEmailError } from '../../errors/blockedEmailError/blockedEmailError';\nimport { isLimitRateHit } from '../../utils/isLimitRateHit/isLimitRateHit';\nimport { limitRateError } from '../../errors/limitRateError/limitRateError';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templateParams - the template params, what will be set to the EmailJS template\n * @param {object} options - the EmailJS SDK config options\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = async (serviceID, templateID, templateParams, options) => {\n    const opts = buildOptions(options);\n    const publicKey = opts.publicKey || store.publicKey;\n    const blockHeadless = opts.blockHeadless || store.blockHeadless;\n    const storageProvider = opts.storageProvider || store.storageProvider;\n    const blockList = { ...store.blockList, ...opts.blockList };\n    const limitRate = { ...store.limitRate, ...opts.limitRate };\n    if (blockHeadless && isHeadless(navigator)) {\n        return Promise.reject(headlessError());\n    }\n    validateParams(publicKey, serviceID, templateID);\n    validateTemplateParams(templateParams);\n    if (templateParams && isBlockedValueInParams(blockList, templateParams)) {\n        return Promise.reject(blockedEmailError());\n    }\n    if (await isLimitRateHit(location.pathname, limitRate, storageProvider)) {\n        return Promise.reject(limitRateError());\n    }\n    const params = {\n        lib_version: '4.4.1',\n        user_id: publicKey,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templateParams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","export const validateTemplateParams = (templateParams) => {\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    if (templateParams && templateParams.toString() !== '[object Object]') {\n        throw 'The template params have to be the object. Visit https://www.emailjs.com/docs/sdk/send/';\n    }\n};\n","import './contact.scss'\r\nimport { icon } from '../../utils/icons'\r\nimport React, { useState } from 'react'\r\nimport emailjs from '@emailjs/browser'\r\nimport { useSelector } from 'react-redux'\r\nimport { contactLang, sectionLang } from '../../utils/data'\r\n\r\nconst Contact = () => {\r\n  const lang = useSelector((state) => state.switchLang.lang)\r\n  const [copyPhoneSuccess, setCopyPhoneSuccess] = useState('')\r\n  const [copyMailSuccess, setCopyMailSuccess] = useState('')\r\n  const linkedInIcon = icon[0].icon\r\n  const mailIcon = icon[1].icon\r\n  const phoneIcon = icon[2].icon\r\n  const paperPlaneIcon = icon[3].icon\r\n\r\n  const info = {\r\n    phone: '06 47 01 30 99',\r\n    mail: 'canivet.steven@gmail.com',\r\n    linkedIn: 'Voir le profil',\r\n  }\r\n\r\n  const [formState, setFormState] = useState({\r\n    lastName: '',\r\n    firstName: '',\r\n    subject: '',\r\n    email: '',\r\n    message: '',\r\n  })\r\n\r\n  const [confirm, setConfirm] = useState('')\r\n  const [confirmVisible, setConfirmVisible] = useState(false)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    emailjs\r\n      .send(\r\n        'service_portfolio',\r\n        'template_portfolio',\r\n        formState,\r\n        'QeBm7uGs-Rbgo1Hq7'\r\n      )\r\n      .then((response) => {\r\n        console.log('SUCCESS!', response.status, response.text)\r\n        setFormState({\r\n          lastName: '',\r\n          firstName: '',\r\n          subject: '',\r\n          email: '',\r\n          message: '',\r\n        })\r\n        setConfirm('Le message a bien été envoyé')\r\n        setConfirmVisible(true)\r\n        setTimeout(() => {\r\n          setConfirmVisible(false)\r\n        }, 10000)\r\n      })\r\n      .catch((err) => {\r\n        console.error('FAILED...', err)\r\n        setConfirm(\r\n          `En raison d'une erreur, le message ne s'est pas envoyé correctement`\r\n        )\r\n        setConfirmVisible(true)\r\n        setTimeout(() => {\r\n          setConfirmVisible(false)\r\n        }, 10000)\r\n      })\r\n  }\r\n\r\n  const copyToClipboard = async (e, type) => {\r\n    try {\r\n      const copyText = e.currentTarget.querySelector('.copyText').textContent\r\n\r\n      await navigator.clipboard.writeText(copyText)\r\n\r\n      // Met à jour le message de succès en fonction de l'élément cliqué\r\n      if (type === 'phone') {\r\n        setCopyPhoneSuccess(\r\n          !lang ? contactLang.copyPhoneFr : contactLang.copyPhoneEn\r\n        )\r\n      } else if (type === 'email') {\r\n        setCopyMailSuccess(\r\n          !lang ? contactLang.copyMailFr : contactLang.copyMailEn\r\n        )\r\n      }\r\n\r\n      // Réinitialiser le message après 2 secondes\r\n      setTimeout(() => {\r\n        setCopyPhoneSuccess('')\r\n      }, 2000)\r\n      setTimeout(() => {\r\n        setCopyMailSuccess('')\r\n      }, 2000)\r\n    } catch (err) {\r\n      console.log('Échec de la copie')\r\n    }\r\n  }\r\n  const navigateToProfile = () => {\r\n    window.open('https://www.linkedin.com/', '_blank')\r\n  }\r\n\r\n  return (\r\n    <section className=\"contactSection padding\" id=\"contact\">\r\n      <div className=\"contact margin\">\r\n        <h2 className=\"underline\">\r\n          {!lang ? sectionLang.contactFr : sectionLang.contactEn}\r\n        </h2>\r\n        <div className=\"contact_group margin\">\r\n          <div className=\"contact_group_infos\">\r\n            <div\r\n              data-info={copyPhoneSuccess || info.phone}\r\n              className=\"contact_group_infos_element\"\r\n              onClick={(e) => copyToClipboard(e, 'phone')}\r\n            >\r\n              {phoneIcon}\r\n              <h3>Tel</h3>\r\n              <p className=\"hiddenText copyText\">06 47 01 30 99</p>\r\n            </div>\r\n            <div\r\n              data-info={copyMailSuccess || info.mail}\r\n              className=\"contact_group_infos_element\"\r\n              onClick={(e) => copyToClipboard(e, 'email')}\r\n            >\r\n              {mailIcon}\r\n              <h3>Email</h3>\r\n              <p className=\"hiddenText copyText\">canivet.steven@gmail.com</p>\r\n            </div>\r\n            <div\r\n              data-info={!lang ? contactLang.profileFr : contactLang.profileEn}\r\n              className=\"contact_group_infos_element\"\r\n              onClick={navigateToProfile}\r\n            >\r\n              {linkedInIcon}\r\n              <h3>LinkedIn</h3>\r\n            </div>\r\n          </div>\r\n          <form className=\"form\" onSubmit={handleSubmit}>\r\n            <div className=\"wrapper\">\r\n              <div className=\"wrapper_container\">\r\n                <div className=\"wrapper_container_inputs\">\r\n                  <label className=\"sr-only\" htmlFor=\"lastName\">\r\n                    LastName\r\n                  </label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    id=\"lastName\"\r\n                    placeholder={\r\n                      !lang ? contactLang.lastNameFr : contactLang.lastNameEn\r\n                    }\r\n                    value={formState.lastName}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"wrapper_container_inputs\">\r\n                  <label className=\"sr-only\" htmlFor=\"firstName\">\r\n                    Firstname\r\n                  </label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    id=\"firstName\"\r\n                    placeholder={\r\n                      !lang ? contactLang.firstNameFr : contactLang.firstNameEn\r\n                    }\r\n                    value={formState.firstName}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"wrapper_container_inputs\">\r\n                  <label className=\"sr-only\" htmlFor=\"subject\">\r\n                    Subject\r\n                  </label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"text\"\r\n                    name=\"subject\"\r\n                    id=\"subject\"\r\n                    placeholder={\r\n                      !lang ? contactLang.subjectFr : contactLang.subjectEn\r\n                    }\r\n                    value={formState.subject}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n                <div className=\"wrapper_container_inputs\">\r\n                  <label className=\"sr-only\" htmlFor=\"email\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"input\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={formState.email}\r\n                    onChange={handleChange}\r\n                    required\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"wrapper_message\">\r\n                <label className=\"sr-only\" htmlFor=\"message\">\r\n                  Message\r\n                </label>\r\n                <textarea\r\n                  className=\"textarea\"\r\n                  name=\"message\"\r\n                  id=\"message\"\r\n                  placeholder=\"Message\"\r\n                  value={formState.message}\r\n                  onChange={handleChange}\r\n                  required\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\">\r\n              <span className=\"sr-only\">Contact button</span>\r\n              {paperPlaneIcon}\r\n            </button>\r\n          </form>\r\n          {confirmVisible && (\r\n            <div className=\"confirm\">\r\n              <p className=\"confirm_text\">{confirm}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n"],"names":["EmailJSResponseStatus","constructor","_status","arguments","length","undefined","_text","this","status","text","store","origin","blockHeadless","storageProvider","createWebStorage","localStorage","get","key","Promise","resolve","getItem","set","value","setItem","remove","removeItem","buildOptions","options","publicKey","toString","sendPost","async","url","data","headers","response","fetch","method","body","message","responseStatus","ok","validateParams","serviceID","templateID","isHeadless","navigator","webdriver","languages","headlessError","isBlockedValueInParams","params","list","watchVariable","isBlockListDisabled","validateBlockListParams","Array","isArray","getValue","name","FormData","includes","blockedEmailError","isLimitRateHit","defaultID","storage","throttle","validateLimitRateParams","id","leftTime","lastTime","Number","Date","now","getLeftTime","limitRateError","templateParams","opts","blockList","limitRate","reject","validateTemplateParams","location","pathname","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","Contact","lang","useSelector","state","switchLang","copyPhoneSuccess","setCopyPhoneSuccess","useState","copyMailSuccess","setCopyMailSuccess","linkedInIcon","icon","mailIcon","phoneIcon","paperPlaneIcon","info","formState","setFormState","lastName","firstName","subject","email","confirm","setConfirm","confirmVisible","setConfirmVisible","handleChange","e","target","copyToClipboard","type","copyText","currentTarget","querySelector","textContent","clipboard","writeText","contactLang","copyPhoneEn","copyPhoneFr","copyMailEn","copyMailFr","setTimeout","err","console","log","_jsx","className","children","_jsxs","sectionLang","contactEn","contactFr","onClick","profileEn","profileFr","navigateToProfile","window","open","onSubmit","preventDefault","emailjs","then","catch","error","htmlFor","placeholder","lastNameEn","lastNameFr","onChange","required","firstNameEn","firstNameFr","subjectEn","subjectFr"],"sourceRoot":""}